[
    {
      "type": "паттерны",
      "name": "Singleton",
      "category": "Порождающий",
      "usage": "Конфигурация, логгеры, БД"
    },
    {
      "type": "паттерны",
      "name": "Factory Method",
      "category": "Порождающий",
      "usage": "Создание объектов без указания класса"
    },
    {
      "type": "паттерны",
      "name": "Builder",
      "category": "Порождающий",
      "usage": "Пошаговая сборка сложных объектов"
    },
    {
      "type": "паттерны",
      "name": "Prototype",
      "category": "Порождающий",
      "usage": "Клонирование существующих объектов"
    },
    {
      "type": "паттерны",
      "name": "Observer",
      "category": "Поведенческий",
      "usage": "Реакция на события, подписка"
    },
    {
      "type": "паттерны",
      "name": "Strategy",
      "category": "Поведенческий",
      "usage": "Выбор алгоритма во время выполнения"
    },
    {
      "type": "паттерны",
      "name": "Command",
      "category": "Поведенческий",
      "usage": "Инкапсуляция запроса, undo/redo"
    },
    {
      "type": "паттерны",
      "name": "State",
      "category": "Поведенческий",
      "usage": "Изменение поведения объекта в зависимости от состояния"
    },
    {
      "type": "паттерны",
      "name": "Memento",
      "category": "Поведенческий",
      "usage": "Сохранение и восстановление состояния"
    },
    {
      "type": "паттерны",
      "name": "Mediator",
      "category": "Поведенческий",
      "usage": "Организация взаимодействия между объектами"
    },
    {
      "type": "паттерны",
      "name": "Decorator",
      "category": "Структурный",
      "usage": "Динамическое добавление функционала"
    },
    {
      "type": "паттерны",
      "name": "Proxy",
      "category": "Структурный",
      "usage": "Заместитель для контроля доступа"
    },
    {
      "type": "паттерны",
      "name": "Composite",
      "category": "Структурный",
      "usage": "Деревья объектов, единый интерфейс"
    },
    {
      "type": "паттерны",
      "name": "Adapter",
      "category": "Структурный",
      "usage": "Совместимость между интерфейсами"
    },
    {
      "type": "паттерны",
      "name": "Visitor",
      "category": "Поведенческий",
      "usage": "Разделение логики от структуры объектов"
    }
  ]
  